# Custom SSH_AUTH_SOCK env variable
ssh_auth_sock:

# enable tmux support
use_tmux: true

# user to use when installing AUR packages,
# will automatically be created and given correct permissions
# should not be main user as it will also be excluded from Login Screen
aur_user: cbailey

# Manually export DISPLAY variable to localhost (useful for WSL)
x11_export_display: false

# secondary shell is a unstable non-login shell that gets loaded in rc file
# for login shell
# supported default shells: xonsh
# set to 'none' if you do not want to configure a secondary shell
secondary_shell: xonsh

## Git Settings

# name and email for git
# set both to 'none' to skip configuring Git
git_email: christopherbailey@multimediallc.com
git_name: "Christopher Bailey"

# public GPG signing key to use for git
# Set this to 'none', but above if you want to configure git
# without a signing key
git_signing_key: 895776E4530BBFF3

## GPG Helper settings

# Location of GPG agents for gpg-remote helper script
# default location locally is /run/user/1000/gnupg/S.gpg-agent
#   where 1000 = your user's uid
gpg_local_agent: /run/user/1000/gnupg/S.gpg-agent
gpg_remote_agent: /run/user/1000/gnupg/S.gpg-agent

# WSL specific GPG settings to get Windows 10 GPG Agent in WSL
# See https://codingnest.com/how-to-use-gpg-with-yubikey-wsl/ for setup
wsl_npiperelay_path: none
windows_gpg_agent_path: none

## Cloud Provider Settings

# cloud provider(s) to configure
# supported: onedrive
# set to empty value to not install a cloud provider
cloud_providers:
  - onedrive

# Absolute path to sync list file
# https://github.com/abraunegg/onedrive/blob/master/docs/USAGE.md#selective-sync
# Ubuntu requires 19.04
onedrive_sync_list: user/mortis-configs/sync_list

## Desktop Settings

# DEs to install and setup
# supported: kde, gnome, gnome-ubuntu
# only applies to Linux
# gnome-ubuntu is only avaible for Ubuntu. It installs the default full GNOME DE that comes with Ubuntu
# set to empty value to not manage desktop environments
# NOTE: GNOME does not support managing themes
desktop_environments:
  - kde

# KDE theme to install
# path must end in /
#
# This theme is only copied over, you still have to manually
# enable it in system settings
kde_theme: user/mortis-configs/kde/theme/

# Display Manager to use
# supported: sddm, gdm
# only applies to Linux
# set to 'none' to not configure display manager
# NOTE: See "Changing Display Managers" in README about changing your default
# NOTE: GDE does not support managing themes
desktop_display_manager: sddm

# Whether or not you already have Plymouth installed and configured
# (if you are on Ubuntu, the answer is probably yes)
desktop_display_manager_use_plymouth: true

# Display Manager theme to install
# path must end in /
# Theme must be fore the display manager you selected above
desktop_display_manager_theme: user/mortis-configs/sddm/theme/

# Path to PNG image to use for User Icon
desktop_display_manager_user_icon: user/mortis-configs/sddm/face.icon

# Network Manager to use
# supported: networkmanager
# only applies to Linux
# set to 'none' to not configure network manager
desktop_network_manager: networkmanager

# Network Manager connection configs
# Set to empty to not configure any connections
network_manager_configs:

## Graphics Drivers Settings
# WARNING: Only support open source drivers
install_intel_drivers: true

install_nvidia_drivers: true

## Extras Settings

# Add extra PPA repos, Ubuntu only
# set to empty to skip
extra_ppas:

# Install list of arbitary packages
# set to empty to not install any
extra_packages:
  - chromium
  - firefox-developer-edition
  - bluez
  - bluez-utils
  - adapta-kde
  - kvantum-theme-adapta
  - papirus-icon-theme
  - yubico-pam
  - yubikey-manager
  - yubikey-manager-qt
  - yubikey-personalization
  - yubikey-personalization-gui
  - libu2f-host
  - qt5-graphicaleffects

# Set to 'none' to skip installing AUR packages
extra_aur_packages:
  - plasma5-applets-volumewin7mixer
  - papirus-libreoffice-theme
  - pam_ssh_agent_auth

# Extra systemd services to enable
# Set to '[]' to skip
extra_systemd: []

# extra arbitary user directories to make relative to ~
# set to empty to not create any
extra_user_dirs:
  - dev

# extra arbitary user files to copy
# set to empty to not copy any
extra_user_files:  []

# extra arbitary system directories to create
# set to '[]' to not copy any
extra_system_dirs: []

# extra arbitary system files to copy
# set to empty to not copy any
extra_system_files:
  - { src: user/mortis-configs/templates/mirrorlist.archlinux, dest: /etc/pacman.d/mirrorlist }

# extra drives to mount
# set to '[]' to not mount anything
extra_mounts: []


## Network Utils Settings

# Install and set up OpenSSH Server
setup_sshd: true

# Install and set up Samba Network Shares
setup_samba: true

# path to optional Samba config
# set to 'none' to not copy one
samba_config: user/mortis-configs/templates/smb.work.conf

# Install and set up NFS Network Shares
setup_nfs: false

# path to optional NFS config
# set to 'none' to not copy one
nfs_config: none

# Install and setup iptable filewall
setup_iptables: true

# IP address or network range (CIDR) of IP addresses without restrictions
# set empty to not have any
iptables_whitelisted_networks:
  - 192.168.0.0/21

# TCP Ports to whitelist
# set to '[]' to not have any
iptables_whitelisted_tcp_ports: []
# - { port: 22, source: 1.2.3.4 }
# - { port: 80 }

# UDP Ports to whitelist
# set to '[]' to not have any
iptables_whitelisted_udp_ports: []
# - { port: 22, source: 1.2.3.4 }
# - { port: 80 }

## Dev Utils Settings

# setup and install Docker
setup_docker: true

# optional Docker daemon.json file
# set to 'none' to not copy one
docker_config: none

# optional extra docker host option (-H)
# set to 'none' to only run on default
# unix socket (unix:///var/run/docker.sock)
extra_docker_host: tcp://192.168.5.10:2376

# setup and install NodeJS
setup_nodejs: true

# setup and install Kubernetes
setup_k8s: false

# setup and install Google Cloud SDK
setup_gcloud: false

# list of git repos to clone
git_repos: []
  # - { url: "git@github.com:AngellusMortis/system-manager.git", dest: dev/system-manager, branch: master }
  # - { url: "git@github.com:AngellusMortis/mortis-configs.git", dest: dev/system-manager/user/mortis-configs, branch: master }

## Extra Personalization settings

# Customize Boot
customize_boot: true

# Grub background
# WARNING: Do NOT set a Grub background and a Grub theme
grub_background: user/mortis-configs/grub/background.png

# Grub theme to install
# path must end in /
# there must be a theme.txt file
grub_theme: none
# grub_theme: user/mortis-configs/grub/theme/

# Plymouth theme to install
# path must end in /
# there must be a theme.txt file
plymouth_theme: user/mortis-configs/plymouth/theme/


## Crons
# Crons to set up
# set to '[]' to skip
extra_crons: []
#   - name: 'name of cron'
#     minute: "0"
#     hour: "0"
#     job: "/usr/bin/true"
#     user: root

## nginx/Let's Encrypt

# email to use for Let's Encrypt certs
# set to empty to not config nginx/Let's encrypt
letencrypt_email:

# domains to get SSL certs for
# set to '[]' to not config nginx/Let's encrypt
letencrypt_domains: []

# nginx proxies to set up
# set to '[]' to not config nginx reverse proxies
nginx_proxies: []
#  - { domain: 'example.com', ip: '127.0.0.1', port: '8000', type: 'proxy', cors: true, cors_domain: 'example.com', media_root: null, static_root: null, internal: true, stats_ip: null }
